/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MigrateLP } from "../MigrateLP";

export class MigrateLP__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _oldFactory: string,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MigrateLP> {
    return super.deploy(
      _oldFactory,
      _factory,
      overrides || {}
    ) as Promise<MigrateLP>;
  }
  getDeployTransaction(
    _oldFactory: string,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_oldFactory, _factory, overrides || {});
  }
  attach(address: string): MigrateLP {
    return super.attach(address) as MigrateLP;
  }
  connect(signer: Signer): MigrateLP__factory {
    return super.connect(signer) as MigrateLP__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MigrateLP {
    return new Contract(address, _abi, signerOrProvider) as MigrateLP;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oldFactory",
        type: "address",
      },
      {
        internalType: "contract IEiFiFactory",
        name: "_factory",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "desiredLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IEiFiFactory",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IEiFiPair",
        name: "orig",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [
      {
        internalType: "contract IEiFiPair",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "oldFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260001960025534801561001657600080fd5b506040516106593803806106598339818101604052604081101561003957600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b031991821617909155600180549390921692169190911790556105d9806100806000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631bd6dfe11461005157806340dc0e3714610075578063c45a01551461008f578063ce5494bb14610097575b600080fd5b6100596100bd565b604080516001600160a01b039092168252519081900360200190f35b61007d6100cc565b60408051918252519081900360200190f35b6100596100d2565b610059600480360360208110156100ad57600080fd5b50356001600160a01b03166100e1565b6000546001600160a01b031681565b60025481565b6001546001600160a01b031681565b600080546040805163c45a015560e01b815290516001600160a01b039283169285169163c45a0155916004808301926020929190829003018186803b15801561012957600080fd5b505afa15801561013d573d6000803e3d6000fd5b505050506040513d602081101561015357600080fd5b50516001600160a01b0316146101a7576040805162461bcd60e51b81526020600482015260146024820152736e6f742066726f6d206f6c6420666163746f727960601b604482015290519081900360640190fd5b6000826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e257600080fd5b505afa1580156101f6573d6000803e3d6000fd5b505050506040513d602081101561020c57600080fd5b50516040805163d21220a760e01b815290519192506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d602081101561027e57600080fd5b50516001546040805163e6a4390560e01b81526001600160a01b03868116600483015280851660248301529151939450600093919092169163e6a43905916044808301926020929190829003018186803b1580156102db57600080fd5b505afa1580156102ef573d6000803e3d6000fd5b505050506040513d602081101561030557600080fd5b505190506001600160a01b03811661039d57600154604080516364e329cb60e11b81526001600160a01b03868116600483015285811660248301529151919092169163c9c653969160448083019260209291908290030181600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b505050506040513d602081101561039857600080fd5b505190505b604080516370a0823160e01b815233600482015290516000916001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d602081101561041157600080fd5b50519050806104255750925061059f915050565b6002819055604080516323b872dd60e01b81523360048201526001600160a01b038816602482018190526044820184905291516323b872dd916064808201926020929091908290030181600087803b15801561048057600080fd5b505af1158015610494573d6000803e3d6000fd5b505050506040513d60208110156104aa57600080fd5b50506040805163226bf2d160e21b81526001600160a01b0384811660048301528251908916926389afcb4492602480820193918290030181600087803b1580156104f357600080fd5b505af1158015610507573d6000803e3d6000fd5b505050506040513d604081101561051d57600080fd5b5050604080516335313c2160e11b815233600482015290516001600160a01b03841691636a6278429160248083019260209291908290030181600087803b15801561056757600080fd5b505af115801561057b573d6000803e3d6000fd5b505050506040513d602081101561059157600080fd5b505060001960025550925050505b91905056fea265627a7a723158202fd5a078cfd3313833c1c224ec8a6748d16077f47e961d2212bac390aeaf70df64736f6c63430005110032";
