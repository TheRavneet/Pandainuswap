/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { EiFiMigrator } from "../EiFiMigrator";

export class EiFiMigrator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _factoryV1: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EiFiMigrator> {
    return super.deploy(
      _factoryV1,
      _router,
      overrides || {}
    ) as Promise<EiFiMigrator>;
  }
  getDeployTransaction(
    _factoryV1: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factoryV1, _router, overrides || {});
  }
  attach(address: string): EiFiMigrator {
    return super.attach(address) as EiFiMigrator;
  }
  connect(signer: Signer): EiFiMigrator__factory {
    return super.connect(signer) as EiFiMigrator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EiFiMigrator {
    return new Contract(address, _abi, signerOrProvider) as EiFiMigrator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryV1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516109093803806109098339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c610882610087600039806102fe5280610328528061040d525080608352506108826000f3fe6080604052600436106100225760003560e01c8063b7df1d251461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b5061007d600480360360a081101561005157600080fd5b506001600160a01b0381358116916020810135916040820135916060810135909116906080013561007f565b005b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306f2bf62876040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156100ee57600080fd5b505afa158015610102573d6000803e3d6000fd5b505050506040513d602081101561011857600080fd5b5051604080516370a0823160e01b815233600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561016657600080fd5b505afa15801561017a573d6000803e3d6000fd5b505050506040513d602081101561019057600080fd5b5051604080516323b872dd60e01b81523360048201523060248201526044810183905290519192506001600160a01b038416916323b872dd916064808201926020929091908290030181600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b505050506040513d602081101561021557600080fd5b505161025f576040805162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015290519081900360640190fd5b60408051637c45f8ad60e11b81526004810183905260016024820181905260448201526000196064820152815160009283926001600160a01b0387169263f88bf15a9260848084019391929182900301818787803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d60408110156102ea57600080fd5b5080516020909101519092509050610323897f000000000000000000000000000000000000000000000000000000000000000083610466565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f305d719858d868e8e8e8e6040518863ffffffff1660e01b815260040180876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b0316815260200182815260200196505050505050506060604051808303818588803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b50505050506040513d60608110156103f157600080fd5b508051602090910151909250905081831115610445576104338b7f00000000000000000000000000000000000000000000000000000000000000006000610466565b6104408b338486036105cf565b610459565b808411156104595761045933828603610731565b5050505050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b602083106104e25780518252601f1990920191602091820191016104c3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610544576040519150601f19603f3d011682016040523d82523d6000602084013e610549565b606091505b5091509150818015610577575080511580610577575080806020019051602081101561057457600080fd5b50515b6105c8576040805162461bcd60e51b815260206004820152601e60248201527f5472616e7366657248656c7065723a20415050524f56455f4641494c45440000604482015290519081900360640190fd5b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b6020831061064b5780518252601f19909201916020918201910161062c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146106ad576040519150601f19603f3d011682016040523d82523d6000602084013e6106b2565b606091505b50915091508180156106e05750805115806106e057508080602001905160208110156106dd57600080fd5b50515b6105c8576040805162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604482015290519081900360640190fd5b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b6020831061077d5780518252601f19909201916020918201910161075e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146107df576040519150601f19603f3d011682016040523d82523d6000602084013e6107e4565b606091505b50509050806108245760405162461bcd60e51b815260040180806020018281038252602381526020018061082a6023913960400191505060405180910390fd5b50505056fe5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544a26469706673582212203f1d5db7934d77fb9c2b633efe50269d7e2fb313ef0fe1cd73f89b2ced3547a364736f6c63430007060033";
